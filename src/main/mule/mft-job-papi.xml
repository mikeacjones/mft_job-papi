<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:anypoint-mq="http://www.mulesoft.org/schema/mule/anypoint-mq" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:mft-config-sapi="http://www.mulesoft.org/schema/mule/mft-config-sapi" xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd  http://www.mulesoft.org/schema/mule/mft-config-sapi http://www.mulesoft.org/schema/mule/mft-config-sapi/current/mule-mft-config-sapi.xsd http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/anypoint-mq http://www.mulesoft.org/schema/mule/anypoint-mq/current/mule-anypoint-mq.xsd http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
    <http:listener-config name="mft-job-papi-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="mft-job-papi-config" api="resource::f8c4f898-332d-4206-b97a-29fc1ce40100:mft-job-papi:1.0.3:raml:zip:mft-job-papi.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <flow name="mft-job-papi-main">
        <http:listener config-ref="mft-job-papi-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="mft-job-papi-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND, APP:NOT_FOUND" enableNotifications="true" logException="true">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="mft-job-papi-console">
        <http:listener config-ref="mft-job-papi-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="mft-job-papi-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="get:\jobs\(id)\tasks\(task-id):mft-job-papi-config">
        <ee:transform>
            <ee:variables>
                <ee:set-variable variableName="id">attributes.uriParams.'id'</ee:set-variable>
                <ee:set-variable variableName="task-id">attributes.uriParams.'task-id'</ee:set-variable>
            </ee:variables>
        </ee:transform>
        <mongo:find-documents collectionName="mft-tasks" fields="," doc:name="Find documents" doc:id="90bd4ed8-d281-421d-b224-c93f6705929e" config-ref="MongoDB_Config">
            <mongo:query><![CDATA[#[output application/json
---
{
	'_id': { '\$oid': vars."task-id" }
}]]]></mongo:query>
        </mongo:find-documents>
        <validation:is-not-empty-collection doc:name="Is not empty collection" doc:id="784cfcf3-a97e-4e24-b727-dc96cae16769">
            <error-mapping sourceType="VALIDATION:EMPTY_COLLECTION" targetType="APP:NOT_FOUND" />
        </validation:is-not-empty-collection>
        <ee:transform doc:name="Transform Message" doc:id="47d22396-7f7a-4e0d-b835-0630a504c9ce">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	id: payload[0].'_id'.'\$oid',
	(payload[0] - "job" - "systemInfo" - "_id")
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="post:\jobs\(id)\tasks:mft-job-papi-config">
        <choice doc:name="Choice" doc:id="41774305-91a0-49a8-a8d9-8d6ee731315f">
            <when expression="#[payload.job?]">
                <mongo:insert-document collectionName="mft-tasks" doc:name="Insert document" doc:id="50c34902-301d-4f7f-aa6f-5e4a17bba795" config-ref="MongoDB_Config">
                    <mongo:document><![CDATA[#[output application/json
---
{
	(payload - "status" - "created" - "started" - "finished"),
	status: "PENDING",
	created: now() as String
}]]]></mongo:document>
                </mongo:insert-document>
                <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"id": payload.'_id'.'\$oid',
	"href": "/jobs/$(vars.id)/tasks/$(payload.'_id'.'\$oid')"
}]]></ee:set-payload>
                    </ee:message>
                </ee:transform>
            </when>
            <otherwise>
                <ee:transform doc:name="vars.id" doc:id="1666a0ac-b974-4a82-88c3-4ead284649c8">
                    <ee:variables>
                        <ee:set-variable variableName="id"><![CDATA[attributes.uriParams.'id']]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
                <flow-ref doc:name="create-job-task" doc:id="045a9ae1-3a07-46c3-9d9c-ca1608f4687a" name="create-job-task" />
            </otherwise>
        </choice>
    </flow>
    <flow name="post:\jobs\(id):mft-job-papi-config">
        <ee:transform doc:name="vars.id">
            <ee:variables>
                <ee:set-variable variableName="id">attributes.uriParams.'id'</ee:set-variable>
            </ee:variables>
        </ee:transform>
        <flow-ref doc:name="create-job-task" doc:id="fbde59d1-e3ff-4f3c-a8f4-16216e894ef8" name="create-job-task" />
    </flow>
    <sub-flow name="create-job-task" doc:id="6dd9f422-ed4b-4ac4-8143-f7b6e551943b">
        <mft-config-sapi:get-job-by-id doc:name="Get job by id" doc:id="2558142d-6161-4bef-8728-5910b305c2cb" config-ref="MFT_Config_SAPI_Config" id="#[vars.id]" client-id="${secure::mft.config.client_id}" client-secret="${secure::mft.config.client_secret}" target="job" />
        <set-variable value="#[[  vars.job.inboundSystem.id,  (vars.job.outboundSystem.id) if (vars.job.outboundSystem? and vars.job.outboundSystem != null) ] distinctBy $]" doc:name="systems" doc:id="f26a7275-1cc1-4878-b564-5dd588dd47f2" variableName="systems" />
        <set-variable value="#[output application/json --- {}]" doc:name="systemInfo" doc:id="428d09ed-b9fe-4450-9ef4-2268085a23c6" variableName="systemInfo" />
        <foreach doc:name="For Each" doc:id="f9bee8a8-940c-4093-9862-3a0633508e4f" collection="#[vars.systems]">
            <set-variable value="#[payload]" doc:name="systemId" doc:id="59531c63-1ce6-4696-bc0b-0b1f47fc2f7f" variableName="systemId" />
            <mft-config-sapi:get-system-by-id doc:name="Get system by id" doc:id="a93326c1-6dbb-4c0c-b257-f3e8b4cfcc6f" config-ref="MFT_Config_SAPI_Config" id="#[payload]" client-id="${secure::mft.config.client_id}" client-secret="${secure::mft.config.client_secret}" />
            <set-variable value="#[vars.systemInfo ++ { (vars.systemId): payload }]" doc:name="systemInfo" doc:id="b7e7b4a1-73d4-4853-9160-ae9f84b16d2c" variableName="systemInfo" />
        </foreach>
        <ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	job: vars.job,
	systemInfo: vars.systemInfo
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <flow-ref doc:name="create task" doc:id="7db40bdb-cef1-4e43-bf90-ebe5de30422b" name="post:\jobs\(id)\tasks:mft-job-papi-config" target="task" />
        <until-successful maxRetries="5" doc:name="Until Successful" doc:id="6feb08c2-d3a3-484f-988c-7771cfc1e2a6">
            <anypoint-mq:publish doc:name="Publish" doc:id="ccd37c3f-21b1-4113-aa4d-cf2d75f716da" config-ref="Anypoint_MQ_Config" destination='#[if (payload.job.runOnPrem? and payload.job.runOnPrem) "mft-onprem-task-queue" else "mft-task-queue"]'>
                <anypoint-mq:properties><![CDATA[#[output application/java
---
{
	"taskId" : vars.task.id
}]]]></anypoint-mq:properties>
            </anypoint-mq:publish>
        </until-successful>
        <ee:transform doc:name="Transform Message" doc:id="291c4baa-210a-42c5-8ad9-fee61222907c">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
vars.task]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </sub-flow>
    <flow name="patch:\jobs\(id)\tasks\(task-id):application\json:mft-job-papi-config">
        <ee:transform>
            <ee:variables>
                <ee:set-variable variableName="id">attributes.uriParams.'id'</ee:set-variable>
                <ee:set-variable variableName="task-id">attributes.uriParams.'task-id'</ee:set-variable>
            </ee:variables>
        </ee:transform>
        <mongo:count-documents doc:name="Count documents" doc:id="5e9741c7-7a9e-45f7-acd1-56ecaa7e0665" config-ref="MongoDB_Config" collectionName="mft-tasks" target="count">
            <mongo:query><![CDATA[#[output application/json
---
{
	'_id': { '\$oid': vars."task-id" }
}]]]></mongo:query>
        </mongo:count-documents>
        <validation:is-true doc:name="Is true" doc:id="700c7ab0-d52c-4880-beff-55c93e8fc42b" expression="#[vars.count &gt; 0]">
            <error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:NOT_FOUND" />
        </validation:is-true>
        <mongo:update-documents doc:name="Update documents" doc:id="3c2726b1-9441-4c73-a38f-e03dce5080bf" config-ref="MongoDB_Config" collectionName="mft-tasks">
            <mongo:query><![CDATA[#[output application/json
---
{
	'_id': { '\$oid': vars."task-id" }
}]]]></mongo:query>
            <mongo:content-to-update><![CDATA[#[output applicatoin/json
---
{
	(finished: now() as String) if (payload.status == "FINISHED"),
	(started: now() as String) if (payload.status == "STARTED"),
	status: payload.status
}]]]></mongo:content-to-update>
        </mongo:update-documents>
    </flow>
</mule>
